library(StereoMorph)
digitizeImage(image.file = 'teste', shapes.file = 'shapes',
landmarks.ref = 'landmarks_erik.txt',
curves.ref = 'curves_erik.txt')
library(StereoMorph)
digitizeImage(image.file = 'teste', shapes.file = 'shapes',
landmarks.ref = 'landmarks_erik.txt',
curves.ref = 'curves_erik.txt')
digitizeImage(image.file = 'teste', shapes.file = 'shapes',
landmarks.ref = 'landmarks_erik.txt',
curves.ref = 'curves_erik.txt')
digitizeImage(image.file = 'teste', shapes.file = 'shapes',
landmarks.ref = 'landmarks_erik.txt',
curves.ref = 'curves_erik.txt')
install.package("Morpho")
install.package("morpho")
install.packages("Morpho")
library (Morpho)
load("~/oto_morpho_geo/Landmarks_sulcus/.Rhistory")
setwd("C:/Users/oliiv/OneDrive/Documentos/oto_morpho_geo/Landmarks_sulcus")
#importar coordenadas landmarks
con_nobilis <- readland.tps("Landmarks_TODOS.TPS", specID = "ID")
library (geomorph)
#importar coordenadas landmarks
con_nobilis <- readland.tps("Landmarks_TODOS.TPS", specID = "ID")
#importar coordenadas landmarks
haem_todos <- readland.tps("Landmarks_TODOS.TPS", specID = "ID")
#importar classifiers
haem_class <- read.csv("Haemulidae_separados_final.csv")
haem_gpa <- gpagen(haem_todos)
plot(haem_gpa)
rm(list = ls())
library (geomorph)
library (segmented)
install.packages("segmented")
library (segmented)
library (Morpho)
install.packages("Morpho")
library (Morpho)
install.packages("Morpho")
library (Morpho)
#importar coordenadas landmarks
haem_todos <- readland.tps("Landmarks_SEO_TUDO.TPS", specID = "ID")
#importar classifiers
haem_class <- read.csv("Haemulidae_separados_final.csv")
haem_gpa <- gpagen(haem_todos)
plot(haem_gpa)
plot(haem_gpa)
#PCA
PCA <- gm.prcomp(haem_gpa)
#PCA
PCA <- gm.prcomp(haem_gpa$coords)
plot(PCA, col = haem_class$Habitat)
plot(PCA, col = haem_class$pop)
View(PCA)
plot(PCA, col = haem_class$pop)
plot(PCA, col = haem_class$pop)
summary(PCA)
knitr::opts_chunk$set(echo = FALSE)
```{r, eval = FALSE, include = TRUE}
rm(list = ls())
dir()
setwd("~/morpho_geo_otoliths/morfogeometria em otÃ³litos/Landmarks_sulcus")
library (geomorph)
#importar coordenadas landmarks
haem_sulcus <- readland.tps("Landmarks_TODOS_menos.TPS", specID = "ID")
#importar coordenadas landmarks
haem_sulcus <- readland.tps("Landmarks_TODOS_menos_teste.TPS", specID = "ID")
#importar coordenadas landmarks
haem_sulcus <- readland.tps("Landmarks_TODOS_menos_teste.TPS", specID = "ID", readcurves = TRUE)
define.sliders(haem_sulcus, nsliders = 5)
define.sliders(haem_sulcus, nsliders = 5)
define.sliders(haem_sulcus, nsliders = 5, write.file = TRUE)
define.sliders(haem_sulcus, nsliders = 5, write.file = TRUE)
define.sliders(haem_sulcus, nsliders = 5, write.file = TRUE)
define.sliders(haem_sulcus, nsliders = 5, write.file = TRUE)
define.sliders(haem_sulcus, nsliders = 5, write.file = TRUE)
#importar coordenadas landmarks
haem_sulcus <- readland.tps("Landmarks_TODOS_menos_teste.TPS", specID = "ID",
readcurves = TRUE)
define.sliders(haem_sulcus, nsliders = 5, write.file = TRUE)
define.sliders(haem_sulcus, nsliders = 6, write.file = TRUE)
define.sliders(haem_sulcus, nsliders = 6, write.file = TRUE)
haem_sulcus_gpa <- gpagen(haem_sulcus)
curve <- read.csv("curveslide.csv")
digit.curves(start = 1, curve = curve, nPoints = 5, closed = FALSE)
curva <- read.csv("curveslide.csv")
digit.curves(start = 1, curve = curva, nPoints = 5, closed = FALSE)
digit.curves(start = 1, curve = "curva", nPoints = 5, closed = FALSE)
View(curva)
digit.curves(start = 1, curve = haem_sulcus_gpa$nsliders, nPoints = 5, closed = FALSE)
digit.curves(start = [,1], curve = haem_sulcus_gpa$nsliders, nPoints = 5, closed = FALSE)
digit.curves(start = curve[,1], curve = haem_sulcus_gpa$nsliders, nPoints = 5, closed = FALSE)
digit.curves(start = curve[,1], curve = curva, nPoints = 5, closed = FALSE)
curva <- as.matrix(read.csv("curveslide.csv", header = TRUE))
digit.curves(start = curve[,1], curve = curva, nPoints = 5, closed = FALSE)
digit.curves(start = 1, curve = curva, nPoints = 5, closed = FALSE)
digit.curves(start = 1, curve = curva, nPoints = 4, closed = FALSE)
digit.curves(start = 1, curve = curva, nPoints = 3, closed = FALSE)
haem_sulcus_gpa <- gpagen(haem_sulcus, curves = curva)
plot(haem_sulcus_gpa)
#PCA
PCA <- gm.prcomp(haem_sulcus_gpa$nsliders, scale = TRUE)
#PCA
PCA <- gm.prcomp(haem_sulcus_gpa$coords, scale = TRUE)
habitat <- factor(haem_class$Habitat)
#importar classifiers
haem_class <- read.csv("Haemulidae_separados_final.csv")
habitat <- factor(haem_class$Habitat)
maturacao <- factor (haem_class$Maturacao)
local <- factor (haem_class$Localidade)
especie <- factor (haem_class$Pop)
sexo <- factor (haem_class$Sexo)
plot(PCA, col = habitat)
plot (PCA, col = maturacao)
haem_gdf <- geomorph.data.frame (haem_sulcus_gpa, especie = especie, habitat = habitat,
maturacao = maturacao, sexo = sexo) #criar um geomorph data frame
haem_sulcus_gpa <- gpagen(haem_sulcus, curves = curva, ProcD = TRUE)
plot(haem_sulcus_gpa)
plot(haem_sulcus_gpa$consensus)
